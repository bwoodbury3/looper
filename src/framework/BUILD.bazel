load("//python:pybind.bzl", "pybind_extension")
load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

# Top level API for interfacing with looper.
rust_library(
    name = "runner",
    srcs = ["runner.rs"],
    deps = [
        "//src/audio:audio",
        "//src/virtual:metronome",
        ":block",
        ":config",
        ":log",
        ":stream",
        ":tempo",
    ]
)

rust_library(
    name = "config",
    srcs = [
        "config.rs",
    ],
    deps = [
        "@crate_index//:json",
        ":log",
    ]
)

rust_library(
    name = "stream",
    srcs = [
        "stream.rs",
    ]
)

rust_library(
    name = "block",
    srcs = [
        "block.rs",
    ],
    deps = [
        ":tempo",
    ]
)

rust_library(
    name = "log",
    srcs = [
        "log.rs",
    ],
)

rust_library(
    name = "clip",
    srcs = [
        "clip.rs",
    ]
)

rust_library(
    name = "sampler",
    srcs = [
        "sampler.rs",
    ],
    deps = [
        ":log",
        ":stream",
    ]
)

rust_library(
    name = "tempo",
    srcs = [
        "tempo.rs",
    ],
    deps = [
        ":config",
        ":stream",
    ]
)

cc_library(
    name = "json",
    srcs = ["json_util.cc"],
    hdrs = ["json_util.h"],
    deps = [
        "@json//:json",
        ":log",
    ],
)

cc_library(
    name = "datatypes",
    hdrs = ["datatypes.h"],
)

cc_library(
    name = "framework",
    srcs = ["config.cc"],
    hdrs = ["config.h", "time.h"],
    deps = [
        "@json//:json",
        ":block",
        ":log",
        ":tempo",
    ],
)

cc_library(
    name = "keyboard",
    srcs = ["keyboard.cc"],
    hdrs = ["keyboard.h"],
    deps = [":log"],
)

cc_library(
    name = "volume",
    srcs = ["volume.cc"],
    hdrs = ["volume.h"],
    deps = [
        ":datatypes",
    ]
)

pybind_extension(
    name = "looper",
    srcs = ["runner_py.cc"],
    deps = [":runner"],
)

py_library(
    name = "looper",
    data = [":looper.so"],
    imports = ["."],
)
